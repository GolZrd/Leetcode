package main

import "fmt"

func main() {
	fmt.Println(search([]int{3, 1}, 1))
}

func search(nums []int, target int) int {
	// Определяем 2 указателя на начало и конец
	left, right := 0, len(nums)-1

	// Запускаем цикл пока left <= right
	for left <= right {
		// Находим срдний индекс
		mid := left + (right-left)/2
		//Проверяем значение по индексу mid, если оно равно target, то возвращаем его
		if nums[mid] == target {
			return mid
		}

		// Теперь делаем проверки, если значение по левому индексу меньше или равно среднему
		// значит в левой части значения идут по возрастанию и сдвига там не было
		if nums[left] <= nums[mid] {
			// Теперь мы проверяем входит ли target в пределы этого среза
			// Сначала проверим если target больше значения по индексу mid или
			// Если target меньше значения по индексу left, то targets не входит в этот срез
			// В таком случае мы сдвигаем левый указатель на mid+1 и далее ищем его в другой части
			if target > nums[mid] || target < nums[left] {
				left = mid + 1
				// Иначе, это значение target входит в этот срез, по сути отсортированный
				// и мы тогда правый указатель сдвигаем на mid-1
			} else {
				right = mid - 1
			}
			// если же значение слева оказалось больше значения по индексу mid
			// значит часть справа будет отсортированна
		} else {
			// Проверяем входит ли наше значение в этот срез
			// Если target больше чем среднее значение или target больше чем значение справа
			if target < nums[mid] || target > nums[right] {
				// В таком случае значение не входит в эту часть и мы двигаем правый индекс
				right = mid - 1
				// Иначе, то есть если target находится в этих пределах, то двигаем левый указатель
			} else {
				left = mid + 1
			}
		}
	}

	return -1
}
